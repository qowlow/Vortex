-- Load Rayfield Library
local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source.lua"))()
-- Create Window
local Window = Rayfield:CreateWindow({
    Name = "VORTEX | Bubble Gum Infinity",
    LoadingTitle = "VORTEX WRAP",
    LoadingSubtitle = "by MateoDev2024",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "VortexWrap", -- Create a folder to save config
        FileName = "VortexSettings"
    },
    Discord = {
        Enabled = false, -- true if you want to link Discord
        Invite = "",
        RememberJoins = false
    },
    KeySystem = false, -- if you want a key system later
})
-- Main Tabs
local AutoFarmTab = Window:CreateTab("üè≠ AutoFarm", nil)
local MiscTab = Window:CreateTab("üõ†Ô∏è Misc", nil)
local SettingsTab = Window:CreateTab("‚öôÔ∏è Settings", nil)
-- Variables
local autoBlow = false
local autoSell = false
local autoHatch = false
local autoFarmCoins = false
local usePoints = false
-- AutoFarm Section
local AutoFarmSection = AutoFarmTab:CreateSection("Main AutoFarm")
Rayfield:CreateToggle({
    Name = "Auto Blow Bubble",
    CurrentValue = false,
    Flag = "AutoBlow",
    SectionParent = AutoFarmSection,
    Callback = function(Value)
        autoBlow = Value
        Rayfield:Notify({
            Title = "Auto Blow",
            Content = Value and "Enabled" or "Disabled",
            Duration = 3,
        })
    end,
})
Rayfield:CreateToggle({
    Name = "Auto Sell Bubble",
    CurrentValue = false,
    Flag = "AutoSell",
    SectionParent = AutoFarmSection,
    Callback = function(Value)
        autoSell = Value
        Rayfield:Notify({
            Title = "Auto Sell",
            Content = Value and "Enabled" or "Disabled",
            Duration = 3,
        })
    end,
})
Rayfield:CreateToggle({
    Name = "Auto Hatch Egg",
    CurrentValue = false,
    Flag = "AutoHatch",
    SectionParent = AutoFarmSection,
    Callback = function(Value)
        autoHatch = Value
        Rayfield:Notify({
            Title = "Auto Hatch",
            Content = Value and "Enabled" or "Disabled",
            Duration = 3,
        })
    end,
})
Rayfield:CreateToggle({
    Name = "Auto Farm Coins/Gems",
    CurrentValue = false,
    Flag = "AutoFarmCoins",
    SectionParent = AutoFarmSection,
    Callback = function(Value)
        autoFarmCoins = Value
        Rayfield:Notify({
            Title = "Auto Farm Coins",
            Content = Value and "Enabled" or "Disabled",
            Duration = 3,
        })
    end,
})
Rayfield:CreateToggle({
    Name = "Auto Use Points",
    CurrentValue = false,
    Flag = "UsePoints",
    SectionParent = AutoFarmSection,
    Callback = function(Value)
        usePoints = Value
        Rayfield:Notify({
            Title = "Auto Use Points",
            Content = Value and "Enabled" or "Disabled",
            Duration = 3,
        })
    end,
})
-- Functions
task.spawn(function()
    while task.wait(0.2) do
        if autoBlow then
            pcall(function()
                game:GetService("ReplicatedStorage").Events.BubbleEvent:FireServer("BlowBubble")
            end)
        end
    end
end)
task.spawn(function()
    while task.wait(1.5) do
        if autoSell then
            pcall(function()
                game:GetService("ReplicatedStorage").Events.BubbleEvent:FireServer("SellBubble")
            end)
        end
    end
end)
task.spawn(function()
    while task.wait(3) do
        if autoHatch then
            pcall(function()
                game:GetService("ReplicatedStorage").Functions.Eggs.Hatch:InvokeServer("CommonEgg", 1)
            end)
        end
    end
end)
task.spawn(function()
    while task.wait(2) do
        if autoFarmCoins then
            pcall(function()
                -- Implement your coin farming logic here
                print("Farming Coins/Gems...")
            end)
        end
    end
end)
task.spawn(function()
    while task.wait(3) do
        if usePoints then
            pcall(function()
                -- Implement your point utilization logic here
                print("Using Points...")
            end)
        end
    end
end)
-- Misc Tab
local MiscSection = MiscTab:CreateSection("Miscellaneous")
Rayfield:CreateButton({
    Name = "Redeem All Codes",
    Callback = function()
        pcall(function()
            local Codes = {"FREE", "RELEASE", "UPDATE1"}
            for _, code in pairs(Codes) do
                game:GetService("ReplicatedStorage").Functions.RedeemCode:InvokeServer(code)
                task.wait(0.5)
            end
            Rayfield:Notify({
                Title = "Code Redemption",
                Content = "All codes have been redeemed!",
                Duration = 5,
            })
        end)
    end,
})
-- Settings Tab
local SettingsSection = SettingsTab:CreateSection("Other Settings")
Rayfield:CreateToggle({
    Name = "Anti-AFK",
    CurrentValue = true,
    Flag = "AntiAFK",
    SectionParent = SettingsSection,
    Callback = function(Value)
        if Value then
            game:GetService("Players").LocalPlayer.Idled:Connect(function()
                local VirtualUser = game:GetService("VirtualUser")
                VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                task.wait(1)
                VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
            end)
            Rayfield:Notify({
                Title = "Anti-AFK",
                Content = "Enabled",
                Duration = 3,
            })
        else
            Rayfield:Notify({
                Title = "Anti-AFK",
                Content = "Disabled",
                Duration = 3,
            })
        end
    end,
})
Rayfield:Notify({
    Title = "VORTEX WRAP Loaded!",
    Content = "Bubble Gum Infinity script loaded successfully ‚úÖ",
    Duration = 6,
    Image = nil,
    Actions = {
        Ignore = {
            Name = "ok",
            Callback = function()
                print("User closed notification")
            end,
        },
    },
})
